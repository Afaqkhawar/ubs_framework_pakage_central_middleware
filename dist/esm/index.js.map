{"version":3,"sources":["../../src/Common/Store/Sagas/encryption.js","../../src/Common/Store/configureStore.js","../../src/Common/Store/Reducers/index.js","../../src/Common/Store/Actions/ActionTypes/ReduxActionTypes.js","../../src/Common/Store/Reducers/mainReducer.js","../../src/Common/Store/Sagas/rootSaga.js","../../src/Common/Store/Actions/ActionTypes/ApiActionTypes.js","../../src/Common/Store/Sagas/general/generalSagas.js","../../src/Common/Store/Sagas/SagaHelper.js","../../src/Common/Constants.js","../../src/Common/Store/Sagas/ReduxOnlySagaHelper.js","../../src/Common/getServerResponse.js","../../src/Common/serverCommunicationHelper.js","../../src/Common/ToastUtils.js"],"sourcesContent":["const CryptoJS = require('crypto-js');\r\n\r\n// Function to adjust key length to ensure it's 32 bytes\r\nconst adjustKeyLength = (key, targetLength = 32) => {\r\n    if (key.length > targetLength) {\r\n        // Truncate the key if it's too long\r\n        return key.slice(0, targetLength);\r\n    } else if (key.length < targetLength) {\r\n        // Pad the key with zeros if it's too short\r\n        return key.padEnd(targetLength, '0');\r\n    }\r\n    return key; // Return the key if it's already the correct length\r\n};\r\n\r\n// Function to encrypt an object\r\nconst encryptObject = (object, key) => {\r\n    const adjustedKey = adjustKeyLength(key); // Adjust key length to 32 bytes\r\n    const encryptionKey = CryptoJS.enc.Utf8.parse(adjustedKey); // 32-byte key for AES-256\r\n\r\n    // Convert the object to a string before encryption\r\n    const stringifiedObject = JSON.stringify(object);\r\n\r\n    // Encrypt the stringified object\r\n    const encrypted = CryptoJS.AES.encrypt(stringifiedObject, encryptionKey, {\r\n        mode: CryptoJS.mode.ECB,\r\n        padding: CryptoJS.pad.Pkcs7,\r\n    }).toString();\r\n\r\n    return encrypted;\r\n};\r\n\r\n// Function to decrypt an encrypted object\r\nconst decryptObject = (encryptedObject, key) => {\r\n    const adjustedKey = adjustKeyLength(key); // Adjust key length to 32 bytes\r\n    const encryptionKey = CryptoJS.enc.Utf8.parse(adjustedKey); // 32-byte key for AES-256\r\n\r\n    // Decrypt the encrypted object (which is a string)\r\n    const decrypted = CryptoJS.AES.decrypt(encryptedObject, encryptionKey, {\r\n        mode: CryptoJS.mode.ECB,\r\n        padding: CryptoJS.pad.Pkcs7,\r\n    });\r\n    // Convert the decrypted string back to an object\r\n    const decryptedString = decrypted.toString(CryptoJS.enc.Utf8);\r\n    const decryptedObject = JSON.parse(decryptedString);\r\n\r\n    return decryptedObject;\r\n};\r\n\r\nmodule.exports = { encryptObject, decryptObject };\r\n\r\n// import CryptoJS from 'crypto-js';\r\n\r\n// // Encryption function\r\n// const encryptWord = (word, OTP) => {\r\n//   const encryptionKey = CryptoJS.enc.Utf8.parse(\"my-secret-key-my-secret-key-my-s\" + OTP); // 32-byte key for AES-256\r\n//   const encrypted = CryptoJS.AES.encrypt(word, encryptionKey, {\r\n//     mode: CryptoJS.mode.ECB,\r\n//     padding: CryptoJS.pad.Pkcs7,\r\n//   }).toString();\r\n//   return encrypted;\r\n// };\r\n\r\n// // Decryption function\r\n// const decryptWord = (encryptedWord, OTP) => {\r\n//   const encryptionKey = CryptoJS.enc.Utf8.parse(\"my-secret-key-my-secret-key-my-s\" + OTP); // 32-byte key for AES-256\r\n//   const decrypted = CryptoJS.AES.decrypt(encryptedWord, encryptionKey, {\r\n//     mode: CryptoJS.mode.ECB,\r\n//     padding: CryptoJS.pad.Pkcs7,\r\n//   });\r\n//   return decrypted.toString(CryptoJS.enc.Utf8);\r\n// };\r\n\r\n// // Encrypting an entire object\r\n// const encryptObject = (object, OTP) => {\r\n//   return Object.keys(object).reduce((encryptedObject, key) => {\r\n//     encryptedObject[key] = encryptWord(object[key], OTP); // Encrypt all properties\r\n//     return encryptedObject;\r\n//   }, {});\r\n// };\r\n\r\n// // Decrypting an entire object\r\n// const decryptObject = (object, OTP) => {\r\n//   return Object.keys(object).reduce((decryptedObject, key) => {\r\n//     decryptedObject[key] = decryptWord(object[key], OTP); // Decrypt all properties\r\n//     return decryptedObject;\r\n//   }, {});\r\n// };\r\n\r\n// export { encryptObject, decryptObject };\r\n","import { applyMiddleware, createStore, compose } from \"redux\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage/index\"; // defaults to localStorage for web\r\nimport createSagaMiddleware from \"redux-saga\";\r\n\r\nimport app from \"./Reducers\"; // Root reducer\r\nimport rootSaga from \"./Sagas/rootSaga\"; // Root saga\r\n\r\n// Persist configuration\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, app);\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  persistedReducer,\r\n  composeEnhancers(applyMiddleware(sagaMiddleware))\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n","import {combineReducers} from 'redux'\r\nimport mainReducer from './mainReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n      main:mainReducer,\r\n})\r\nexport default rootReducer\r\n","///New\r\nexport const REDUX_UPDATE_CURRENT_USER_ROLE = \"REDUX_UPDATE_CURRENT_USER_ROLE\";\r\nexport const REDUX_LOGOUT_CURRENT_USER = \"REDUX_LOGOUT_CURRENT_USER\";\r\nexport const REDUX_UPDATE_CURRENT_USER = \"REDUX_UPDATE_CURRENT_USER\";\r\nexport const REDUX_UPDATE_LOADING_STATE = \"REDUX_UPDATE_LOADING_STATE\";\r\nexport const REDUX_UPDATE_USER_DATA = \"REDUX_UPDATE_USER_DATA\";\r\nexport const REDUX_API_DOCUMENTATION = \"REDUX_API_DOCUMENTATION\";\r\n","import {\r\n  REDUX_UPDATE_CURRENT_USER_ROLE,\r\n  REDUX_UPDATE_CURRENT_USER,\r\n  REDUX_UPDATE_LOADING_STATE,\r\n  REDUX_LOGOUT_CURRENT_USER,\r\n  REDUX_UPDATE_USER_DATA,\r\n  REDUX_API_DOCUMENTATION,\r\n} from \"../Actions/ActionTypes/ReduxActionTypes\";\r\n\r\nconst initialState = {\r\n  accesstoken: null,\r\n  currentUser: null,\r\n  currentUserDesignationsRoles: [],\r\n  currentUserPermissions: [],\r\n  userPermissions: [],\r\n  userDepartments: [],\r\n  userDesignation: [],\r\n  userDevices: [],\r\n  allUserPermissions: {},\r\n  userSelectedRole: {},\r\n  apiDocumentationData: [],\r\n  userRoles: [],\r\n  isLoading: false,\r\n};\r\n\r\nconst mainReducer = (state = initialState, action) => {\r\n  switch (action?.type) {\r\n    case REDUX_UPDATE_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        currentUser: action.payload.otpVerif.user,\r\n        accesstoken: action.payload.otpVerif.access_token,\r\n        currentUserDesignationsRoles:\r\n          action.payload.otpVerif.user_roles_designations_departments,\r\n        userSelectedRole:\r\n          action.payload.otpVerif?.user_roles_designations_departments?.length >\r\n          0\r\n            ? action.payload.otpVerif.user_roles_designations_departments[0]\r\n            : {},\r\n        userPermissions: action.payload.otpVerif.collective_user_permissions,\r\n        currentUserPermissions:\r\n          action.payload.otpVerif.user_roles_designations_departments?.length >\r\n          0\r\n            ? action.payload.otpVerif.user_permissions[\r\n                action.payload.otpVerif.user_roles_designations_departments[0]\r\n                  .user_role_designation_department_id\r\n              ]\r\n            : [],\r\n        allUserPermissions: action.payload.otpVerif.user_permissions,\r\n        userDepartments: action.payload.otpVerif.user_departments,\r\n        userDesignation: action.payload.otpVerif.user_designations,\r\n        userRoles: action.payload.otpVerif.user_roles,\r\n        userDevices: action.payload.otpVerif.user_devices,\r\n      };\r\n    case REDUX_UPDATE_USER_DATA:\r\n      const updatedUser = {\r\n        ...state.currentUser, // Retain existing properties\r\n        ...action.requestParams, // Overwrite with new values from action\r\n      };\r\n      return {\r\n        ...state, // Retain the rest of the state\r\n        currentUser: updatedUser, // Update the currentUser object\r\n      };\r\n\r\n    case REDUX_LOGOUT_CURRENT_USER:\r\n      return initialState;\r\n    case REDUX_UPDATE_CURRENT_USER_ROLE: {\r\n      return {\r\n        ...state,\r\n        userSelectedRole: action.payload,\r\n        currentUserPermissions:\r\n          state.allUserPermissions[\r\n            action.payload?.user_role_designation_department_id\r\n          ],\r\n      };\r\n    }\r\n\r\n    case REDUX_UPDATE_LOADING_STATE:\r\n      return {\r\n        ...state,\r\n        isLoading: action.payload,\r\n      };\r\n    case REDUX_API_DOCUMENTATION:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        apiDocumentationData: action.payload.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default mainReducer;\r\n","import { all } from 'redux-saga/effects';\r\nimport dataSaga from './general/generalSagas'\r\n\r\nfunction * rootSaga() {\r\n    yield all([\r\n        dataSaga(),\r\n    ])\r\n}\r\nexport default rootSaga\r\n","//auth\r\nexport const GET_OTP = \"GET_OTP\";\r\nexport const VERIFY_OTP = \"VERIFY_OTP\";\r\n\r\n// general\r\nexport const UPDATE_CURRENT_USER_ROLE = \"UPDATE_CURRENT_USER_ROLE\";\r\nexport const UPDATE_LOADING_STATE = \"UPDATE_LOADING_STATE\";\r\nexport const LOGOUT_CURRENT_USER = \"LOGOUT_CURRENT_USER\";\r\nexport const GET_ALL_USERS = \"GET_ALL_USERS\";\r\nexport const GET_ALL_ROLES = \"GET_ALL_ROLES\";\r\nexport const DELETE_USER = \"DELETE_USER\";\r\nexport const ADD_USER = \"ADD_USER\";\r\nexport const DELETE_ROLE = \"DELETE_ROLE\";\r\nexport const ADD_ROLE = \"ADD_ROLE\";\r\nexport const GET_GROUPS = \"GET_GROUPS\";\r\nexport const GET_ALL_PERMISSIONS = \"GET_ALL_PERMISSIONS\";\r\nexport const GET_ALL_PERMISSIONS_GROUPS = \"GET_ALL_PERMISSIONS_GROUPS\";\r\nexport const UPDATE_USER_DATA = \"UPDATE_USER_DATA\";\r\nexport const GET_ALL_USER_ROLE_PERMISSIONS_GROUPS =\r\n  \"GET_ALL_USER_ROLE_PERMISSIONS_GROUPS\";\r\nexport const GET_ADMIN_DASHBOARD_DATA = \"GET_ADMIN_DASHBOARD_DATA\";\r\nexport const GET_USER_DEVICES = \"GET_USER_DEVICES\";\r\nexport const ADD_PERMISSION = \"ADD_PERMISSION\";\r\nexport const PERMISSION_UPDATE = \"PERMISSION_UPDATE\";\r\nexport const GET_PERMISSION_BY_ID = \"GET_PERMISSION_BY_ID\";\r\nexport const ADMIN_USER_VIEW = \"admin_user_view\";\r\nexport const ADMIN_DESIGNATION_VIEW = \"admin_designation_view\";\r\nexport const ADMIN_DEPARTMENTS_VIEW = \"admin_departments_view\";\r\nexport const UPDATE_PERMISSION_BY_ID = \"UPDATE_PERMISSION_BY_ID\";\r\nexport const ADMIN_ROLES_DESIGNATION_DEPARTMENT_VIEW =\r\n  \"admin_rolesdesignationsdepartment_view\";\r\nexport const ADMIN_USER_ROLE_DESIGNATION_DEPARTMENT_VIEW = \"admin_urdd_view\";\r\nexport const ADMIN_PERMISSION_GROUPS_VIEW = \"admin_permission_groups_view\";\r\nexport const ADMIN_PERMISSION_GROUPS_PERMISSIONS_VIEW = \"admin_pgp_view\";\r\nexport const ADMIN_USER_ROLE_DESIGNATION_PERMISSIONS_VIEW =\r\n  \"admin_user_role_designation_permissions_view\";\r\nexport const GET_INDIVIDUAL_LEADERBOARD_DATA =\r\n  \"GET_INDIVIDUAL_LEADERBOARD_DATA\";\r\nexport const GET_GROUP_LEADERBOARD_DATA = \"GET_GROUP_LEADERBOARD_DATA\";\r\nexport const GET_USER_DEVICES_OTP = \"GET_USER_DEVICES_OTP\";\r\nexport const ADD_DEVICE = \"ADD_DEVICE\";\r\nexport const ADD_DEVICE_OTP = \"ADD_DEVICE_OTP\";\r\nexport const FETCH_CLASS_ACTIVITIES = \"FETCH_CLASS_ACTIVITIES\";\r\n\r\nexport const FETCH_USER_DEVICES = \"FETCH_USER_DEVICES\";\r\nexport const ADD_USER_DEVICE = \"ADD_USER_DEVICE\";\r\n\r\nexport const API_DOCUMENTATION = \"API_DOCUMENTATION\";\r\nexport const ADMIN_VIEW_USER = \"ADMIN_VIEW_USER\";","import {\r\n  GET_OTP,\r\n  VERIFY_OTP,\r\n  UPDATE_LOADING_STATE,\r\n  UPDATE_CURRENT_USER_ROLE,\r\n  LOGOUT_CURRENT_USER,\r\n  GET_ALL_USERS,\r\n  GET_ALL_ROLES,\r\n  DELETE_USER,\r\n  ADD_USER,\r\n  DELETE_ROLE,\r\n  ADD_ROLE,\r\n  GET_GROUPS,\r\n  GET_ALL_PERMISSIONS,\r\n  GET_ALL_PERMISSIONS_GROUPS,\r\n  UPDATE_USER_DATA,\r\n  GET_ALL_USER_ROLE_PERMISSIONS_GROUPS,\r\n  GET_ADMIN_DASHBOARD_DATA,\r\n  GET_USER_DEVICES,\r\n  ADD_PERMISSION,\r\n  PERMISSION_UPDATE,\r\n  GET_PERMISSION_BY_ID,\r\n  UPDATE_PERMISSION_BY_ID,\r\n  ADMIN_USER_VIEW,\r\n  ADMIN_DESIGNATION_VIEW,\r\n  ADMIN_DEPARTMENTS_VIEW,\r\n  ADMIN_ROLES_DESIGNATION_DEPARTMENT_VIEW,\r\n  ADMIN_USER_ROLE_DESIGNATION_DEPARTMENT_VIEW,\r\n  ADMIN_PERMISSION_GROUPS_VIEW,\r\n  ADMIN_PERMISSION_GROUPS_PERMISSIONS_VIEW,\r\n  ADMIN_USER_ROLE_DESIGNATION_PERMISSIONS_VIEW,\r\n  ADMIN_VIEW_USER,\r\n  API_DOCUMENTATION,\r\n  GET_INDIVIDUAL_LEADERBOARD_DATA,\r\n  GET_GROUP_LEADERBOARD_DATA,\r\n  GET_USER_DEVICES_OTP,\r\n  ADD_DEVICE,\r\n  ADD_DEVICE_OTP,\r\n  FETCH_CLASS_ACTIVITIES,\r\n} from \"../../Actions/ActionTypes/ApiActionTypes\";\r\nimport { takeEvery } from \"redux-saga/effects\";\r\nimport fetchData from \"../SagaHelper\";\r\nimport reduxOnlySagaHelper from \"../ReduxOnlySagaHelper\";\r\n\r\nfunction* dataSaga() {\r\n  // API Sagas\r\n  yield takeEvery(GET_OTP, fetchData);\r\n  yield takeEvery(VERIFY_OTP, fetchData);\r\n  yield takeEvery(GET_ALL_USERS, fetchData);\r\n  yield takeEvery(GET_ALL_ROLES, fetchData);\r\n  yield takeEvery(DELETE_USER, fetchData);\r\n  yield takeEvery(ADD_USER, fetchData);\r\n  yield takeEvery(DELETE_ROLE, fetchData);\r\n  yield takeEvery(ADD_ROLE, fetchData);\r\n  yield takeEvery(GET_GROUPS, fetchData);\r\n  yield takeEvery(GET_ALL_PERMISSIONS, fetchData);\r\n  yield takeEvery(GET_ALL_PERMISSIONS_GROUPS, fetchData);\r\n  yield takeEvery(UPDATE_USER_DATA, fetchData);\r\n  yield takeEvery(GET_ALL_USER_ROLE_PERMISSIONS_GROUPS, fetchData);\r\n  yield takeEvery(GET_ADMIN_DASHBOARD_DATA, fetchData);\r\n  yield takeEvery(GET_USER_DEVICES, fetchData);\r\n  yield takeEvery(ADD_PERMISSION, fetchData);\r\n  yield takeEvery(PERMISSION_UPDATE, fetchData);\r\n  yield takeEvery(GET_PERMISSION_BY_ID, fetchData);\r\n  yield takeEvery(UPDATE_PERMISSION_BY_ID, fetchData);\r\n  yield takeEvery(ADMIN_USER_VIEW, fetchData);\r\n  yield takeEvery(ADMIN_DESIGNATION_VIEW, fetchData);\r\n  yield takeEvery(ADMIN_DEPARTMENTS_VIEW, fetchData);\r\n  yield takeEvery(ADMIN_ROLES_DESIGNATION_DEPARTMENT_VIEW, fetchData);\r\n  yield takeEvery(ADMIN_USER_ROLE_DESIGNATION_DEPARTMENT_VIEW, fetchData);\r\n  yield takeEvery(ADMIN_PERMISSION_GROUPS_VIEW, fetchData);\r\n  yield takeEvery(ADMIN_PERMISSION_GROUPS_PERMISSIONS_VIEW, fetchData);\r\n  yield takeEvery(ADMIN_USER_ROLE_DESIGNATION_PERMISSIONS_VIEW, fetchData);\r\n  yield takeEvery(ADMIN_USER_VIEW, fetchData);\r\n  // yield takeEvery(\"admin_user_view\", fetchData);\r\n  yield takeEvery(\"admin_user_update\",fetchData);\r\n  yield takeEvery(\"admin_urdd_list\",fetchData);\r\n  yield takeEvery('admin_urdd_add',fetchData)\r\n  // Redux Only Sagas\r\n  yield takeEvery(UPDATE_CURRENT_USER_ROLE, reduxOnlySagaHelper);\r\n  yield takeEvery(UPDATE_LOADING_STATE, reduxOnlySagaHelper);\r\n  yield takeEvery(LOGOUT_CURRENT_USER, reduxOnlySagaHelper);\r\n    yield takeEvery(API_DOCUMENTATION, fetchData);\r\n    yield takeEvery(GET_INDIVIDUAL_LEADERBOARD_DATA, fetchData);\r\n    yield takeEvery(GET_GROUP_LEADERBOARD_DATA, fetchData);\r\n    yield takeEvery(GET_USER_DEVICES_OTP, fetchData);\r\n    yield takeEvery(ADD_DEVICE, fetchData);\r\n    yield takeEvery(ADD_DEVICE_OTP, fetchData);\r\n    yield takeEvery(FETCH_CLASS_ACTIVITIES, fetchData);\r\n}\r\n\r\nexport default dataSaga;\r\n","import { select, put } from \"redux-saga/effects\";\r\nimport { encryptObject, decryptObject } from \"./encryption\"; // Assuming these are your encryption/decryption utils\r\nimport constants from \"../../Constants\";\r\nconst debug_log = (should_log, text, variable) => {\r\n  if (should_log) {\r\n    console.log(`*** text *** ${text} ************`);\r\n    console.log(`*** variable *** ${variable} ************`);\r\n  }\r\n};\r\nfunction* fetchData(action, queryParameter, queryParameterId) {\r\n  console.log(\r\n    \"********* SAGHELPER ACTION: ********\",\r\n    action,\r\n    `\\n*******   [queryParameter: ${queryParameter} ]\\n******** [queryParameterId:${queryParameterId} ]********\\n`\r\n  );\r\n  const updated_action = action?.payload || action;\r\n\r\n  try {\r\n    console.log(\"ENV CHECK\", process.env);\r\n\r\n    const all_state = yield select((state) => state.main);\r\n    if (\r\n      !process.env?.REACT_APP_PLATFORM_KEY ||\r\n      !process.env?.REACT_APP_SECRET_KEY\r\n    ) {\r\n      console.log(\"Encryption Failed\");\r\n      updated_action?.onFailure({\r\n        status: 401,\r\n        frameworkStatusCode: \"E44\",\r\n        message: \"Encryption Failed [ Env not found ].\",\r\n      });\r\n      return;\r\n    }\r\n    const currentUser = yield select((state) => state); // Fetch the entire state\r\n    const { userSelectedRole } = currentUser.main;\r\n    console.log(\"currentUser\", currentUser, userSelectedRole);\r\n    const nextPart = updated_action?.apiUrl;\r\n    const useBaseURL =\r\n      updated_action?.useBaseURL == false ? false : true || true;\r\n    const isFile = updated_action?.isFile == true ? true : false || false;\r\n    console.log(\"isFile: \", isFile, updated_action?.isFile);\r\n    const isEncrypted =\r\n      updated_action?.isEncrypted == false ? false : true || true;\r\n    console.log(\"isEncrypted: \", isEncrypted);\r\n    let completeUrl = useBaseURL ? constants?.base_url + nextPart : nextPart;\r\n    if (queryParameter && queryParameter !== \"\") {\r\n      // completeUrl += queryParameter+'&actionPerformerURDD=1';\r\n      completeUrl += queryParameter;\r\n    }\r\n    if (queryParameterId && queryParameterId !== \"\") {\r\n      completeUrl += \"&id=\" + queryParameterId;\r\n    }\r\n    const hasMetaData = updated_action?.metaData;\r\n    const isFormData = updated_action?.formData;\r\n    const accessToken = all_state?.accesstoken || null;\r\n\r\n    const request = {\r\n      headers: {\r\n        ...(isFormData ? {} : { \"Content-Type\": \"application/json\" }),\r\n        accesstoken: accessToken,\r\n      },\r\n      method: updated_action?.requestType || \"GET\",\r\n    };\r\n\r\n    if (hasMetaData && accessToken === null) {\r\n      console.warn(\r\n        \"metaData is true but access token is not present in header\"\r\n      );\r\n      // Optionally handle unauthorized access\r\n      // updated_action?.onFailure?.({\r\n      //   status: 401,\r\n      //   frameworkStatusCode: \"E40\",\r\n      //   message: \"Invalid or expired token.\",\r\n      // });\r\n      // return;\r\n    }\r\n\r\n    if (updated_action?.body && updated_action?.requestType !== \"GET\") {\r\n      if (updated_action?.requestType === \"DELETE\") {\r\n        if (isEncrypted) {\r\n          const deleteEncryption = encryptObject(\r\n            {\r\n              Id: `${updated_action?.body?.Id || null}`,\r\n              actionPerformerURDD:\r\n                userSelectedRole?.user_role_designation_department_id,\r\n            },\r\n            process.env?.REACT_APP_PLATFORM_KEY\r\n          );\r\n          const secondEncryption = {\r\n            reqData: deleteEncryption,\r\n            encryptionDetails: {\r\n              PlatformName: process.env?.REACT_APP_PLATFORM_NAME,\r\n              PlatformVersion: process.env?.REACT_APP_PLATFORM_VERSION,\r\n            },\r\n          };\r\n\r\n          request.headers.encryptedrequest = encryptObject(\r\n            secondEncryption,\r\n            process.env?.REACT_APP_SECRET_KEY\r\n          );\r\n        } else {\r\n          request.headers.reqData = {\r\n            Id: `${action?.body?.Id || null}`,\r\n            actionPerformerURDD:\r\n              userSelectedRole?.user_role_designation_department_id,\r\n          };\r\n        }\r\n      } else {\r\n        if (isEncrypted) {\r\n          request.body = {\r\n            encryptedRequest: {},\r\n          };\r\n          const finalActionBody = !isFormData\r\n            ? {\r\n                ...(updated_action?.body || null), // Spread existing body or payload body\r\n                actionPerformerURDD:\r\n                  userSelectedRole?.user_role_designation_department_id, // Add actionPerformerURDD\r\n              }\r\n            : updated_action?.body;\r\n          console.log(\r\n            \"***************** Final Updated Body ***************** \",\r\n            finalActionBody\r\n          );\r\n          const firstEncryption = encryptObject(\r\n            finalActionBody,\r\n            process.env?.REACT_APP_PLATFORM_KEY\r\n          );\r\n          const secondEncryption = {\r\n            reqData: firstEncryption,\r\n            encryptionDetails: {\r\n              PlatformName: process.env?.REACT_APP_PLATFORM_NAME,\r\n              PlatformVersion: process.env?.REACT_APP_PLATFORM_VERSION,\r\n            },\r\n          };\r\n          request.body.encryptedRequest = encryptObject(\r\n            secondEncryption,\r\n            process.env?.REACT_APP_SECRET_KEY\r\n          );\r\n          request.body = JSON.stringify(request?.body);\r\n        } else {\r\n          if (!isFormData) {\r\n            request.body = JSON.stringify({\r\n              ...(updated_action?.body || {}), // Ensure an empty object if undefined\r\n              actionPerformerURDD:\r\n                userSelectedRole?.user_role_designation_department_id,\r\n            });\r\n          } else {\r\n            request.body = updated_action?.body;\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      if (isEncrypted) {\r\n        request.headers = {\r\n          ...request?.headers,\r\n          encryptedRequest: {},\r\n        };\r\n        const finalActionBody = !isFormData\r\n          ? {\r\n              ...(updated_action?.body || {}), // Ensure an empty object if undefined\r\n              actionPerformerURDD:\r\n                userSelectedRole?.user_role_designation_department_id,\r\n            }\r\n          : updated_action?.body;\r\n        console.log(\r\n          \"***************** Final Updated Body ***************** \",\r\n          finalActionBody\r\n        );\r\n        const firstEncryption = encryptObject(\r\n          finalActionBody,\r\n          process.env?.REACT_APP_PLATFORM_KEY\r\n        );\r\n        const secondEncryption = {\r\n          reqData: firstEncryption,\r\n          encryptionDetails: {\r\n            PlatformName: process.env?.REACT_APP_PLATFORM_NAME,\r\n            PlatformVersion: process.env?.REACT_APP_PLATFORM_VERSION,\r\n          },\r\n        };\r\n        request.headers.encryptedRequest = encryptObject(\r\n          secondEncryption,\r\n          process.env?.REACT_APP_SECRET_KEY\r\n        );\r\n      } else {\r\n        request.headers = !isFormData\r\n          ? {\r\n              ...request?.headers,\r\n              reqData: {\r\n                actionPerformerURDD:\r\n                  userSelectedRole?.user_role_designation_department_id,\r\n              },\r\n            }\r\n          : request?.headers;\r\n      }\r\n    }\r\n    console.log(\"Complete URL\", completeUrl);\r\n    if (completeUrl !== \"\") {\r\n      console.log(\r\n        \"***************** API_Request_After_Encryption *************\\n\",\r\n        request\r\n      );\r\n      const response = yield fetch(completeUrl, request).catch((err) => {\r\n        console.log(`Network error: ${err?.message}`);\r\n        return;\r\n      });\r\n\r\n      let responseData = !isFile ? yield response.json() : response;\r\n      console.log(\"responseData::::\", responseData);\r\n      if (responseData.status !== 200) {\r\n        const frameworkErrorMessage = getFrameworkErrorMessage(\r\n          responseData.status,\r\n          responseData.scc\r\n        );\r\n        if (\r\n          updated_action?.onFailure &&\r\n          typeof updated_action?.onFailure === \"function\"\r\n        ) {\r\n          updated_action?.onFailure({\r\n            status: responseData?.status,\r\n            frameworkStatusCode: responseData?.scc,\r\n            message: frameworkErrorMessage || responseData?.message,\r\n          });\r\n        }\r\n        return; // Stop processing further\r\n      } else {\r\n        if (responseData?.payload && isEncrypted) {\r\n          responseData = decryptObject(\r\n            responseData?.payload,\r\n            process.env?.REACT_APP_PLATFORM_KEY\r\n          );\r\n        } else {\r\n          responseData = !isFile ? responseData?.payload : response;\r\n        }\r\n        if (updated_action?.reduxActionType) {\r\n          yield put({\r\n            type: updated_action?.reduxActionType,\r\n            payload: responseData,\r\n            requestParams: updated_action?.body,\r\n          });\r\n        }\r\n        if (typeof updated_action?.onSuccess === \"function\") {\r\n          console.log(\r\n            \"***************** API_Response *************\\n \",\r\n            completeUrl,\r\n            responseData,\r\n            isFile\r\n          );\r\n          updated_action?.onSuccess(responseData);\r\n        }\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error(`******** Error in fetchData ******* : ${error?.message}`);\r\n    if (\r\n      updated_action?.onFailure &&\r\n      typeof updated_action?.onFailure === \"function\"\r\n    ) {\r\n      updated_action?.onFailure({ message: error.message });\r\n    }\r\n  }\r\n}\r\n\r\n// Helper to map framework error codes to messages\r\nconst getFrameworkErrorMessage = (statusCode, frameworkStatusCode) => {\r\n  const errorMessages = {\r\n    // Parameter Errors\r\n    E10: \"Parameter name does not exist.\",\r\n    E11: \"Parameter validation failure.\",\r\n    E12: \"Parameter missing in source.\",\r\n    E13: \"Required parameter missing.\",\r\n    E14: \"No request body found.\",\r\n\r\n    // API Info Errors\r\n    E20: \"Invalid or missing query nature.\",\r\n    E21: \"Invalid or missing query payload.\",\r\n    E22: \"Callback function error.\",\r\n    E23: \"Callback function missing.\",\r\n    E24: \"Payload function error.\",\r\n    E25: \"Payload function missing.\",\r\n\r\n    // Request Metadata Errors\r\n    E30: \"Invalid or missing request method.\",\r\n    E31: \"Invalid or missing permission.\",\r\n    E32: \"Invalid page size value.\",\r\n\r\n    // Middleware Errors\r\n    E40: \"Invalid or expired token.\",\r\n    E41: \"Permission validation failure.\",\r\n    E42: \"OTP verification failure.\",\r\n    E43: \"Object resolver failure.\",\r\n    E44: \"Database connection failed.\",\r\n\r\n    // API Errors\r\n    E50: \"API version does not exist.\",\r\n    E51: \"API object does not exist.\",\r\n    E52: \"Mismatch request method.\",\r\n  };\r\n\r\n  return (\r\n    errorMessages[frameworkStatusCode] ||\r\n    `Unexpected error (Code: ${frameworkStatusCode})`\r\n  );\r\n};\r\nexport default fetchData;\r\n","const constants = {\r\n  // base_url: 'http://10.0.0.68:3000/api',            //self\r\n  base_url: \"http://localhost:3000/api\", //local\r\n  // base_url: 'http://10.0.0.14:3000/api',      //Aashir\r\n  // base_url: \"http://10.0.1.20:3000/api\",     //Noor\r\n  // base_url:\"http://10.0.0.14:3000/api\", //Hamad\r\n  step1: \"&step=1\",\r\n  step2: \"&step=2\",\r\n  version: \"?version=1.0\",\r\n  all: \"/all\",\r\n  list: \"/list\",\r\n  update: \"/update\",\r\n  add: \"/add\",\r\n  delete: \"/delete\",\r\n  dropDown: \"/dropdown\",\r\n  groups: \"/groups\",\r\n  errors: \"/errors\",\r\n  get: \"/get\",\r\n\r\n  email: \"/email\",\r\n  log: \"/log\",\r\n  api_documentation: \"/documentation\",\r\n\r\n  get_otp: \"/login?version=1.0&step=1\",\r\n  verify_otp: \"/login?version=1.0&step=2\",\r\n  users_role_info: \"/users_role_info\",\r\n  //login\r\n  login: \"/login\",\r\n  info: \"/info\",\r\n  crud: \"/crud\",\r\n\r\n  // Users\r\n  users: \"/users\",\r\n  groups: \"/groups\",\r\n\r\n  // Admin Dashboard\r\n  get_admin_dashboard_data: \"/admin/dashboard\",\r\n\r\n  // User Devices\r\n  user_devices: \"devices\",\r\n\r\n  // Attachments\r\n  attachments: \"/attachments\",\r\n\r\n  // Chatting Group Members\r\n  chatting_group_members: \"/chatting_group_members\",\r\n\r\n  // Chatting Groups\r\n  chatting_groups: \"/chatting_groups\",\r\n\r\n  // Departments\r\n  departments: \"/departments\",\r\n\r\n  // Designations\r\n  designations: \"/designations\",\r\n\r\n  // Messages\r\n  messages: \"/messages\",\r\n\r\n  // Notifications\r\n  notifications: \"/notifications\",\r\n\r\n  // Permission Groups\r\n  permission_groups: \"/permission_groups\",\r\n\r\n  // Permission Groups Permissions\r\n  permission_groups_permissions: \"/permission_groups_permissions\",\r\n\r\n  // Permissions\r\n  permissions: \"/permissions\",\r\n\r\n  // Platform Versions\r\n  platform_versions: \"/platform_versions\",\r\n\r\n  // Platforms\r\n  platforms: \"/platforms\",\r\n\r\n  // Roles\r\n  roles: \"/roles\",\r\n\r\n  // Roles Designations Department\r\n  roles_designations_department: \"/roles_designations_department\",\r\n\r\n  // Task Flow Steps\r\n  task_flow_steps: \"/task_flow_steps\",\r\n\r\n  // Task Flows\r\n  task_flows: \"/task_flows\",\r\n\r\n  // Task History\r\n  task_history: \"/task_history\",\r\n\r\n  // Tasks\r\n  tasks: \"/tasks\",\r\n\r\n  // Templates\r\n  templates: \"/templates\",\r\n\r\n  // User Device Notifications\r\n  user_device_notifications: \"/user_device_notifications\",\r\n\r\n  // User Devices\r\n  luser_devices: \"/user_devices\",\r\n\r\n  // User Role Designation Permissions\r\n  user_role_designation_permissions: \"/user_role_designation_permissions\",\r\n\r\n  // User Roles Designations Department\r\n  user_roles_designations_department: \"/user_roles_designations_department\",\r\n};\r\n\r\nexport default constants;\r\n","// import React from 'react'\r\nimport {put} from 'redux-saga/effects';\r\n// import constants from '../../Constants';\r\n\r\nconst DEBUG_LOG_API = true;\r\nconst DEBUG_LOG_API_REQUEST = true;\r\nconst DEBUG_LOG_API_RAW_RESPONSE = true;\r\nconst DEBUG_LOG_API_JSON_RESPONSE = true;\r\n\r\nconst debug_log = (should_log, text, variable) => {\r\n  if (should_log) {\r\n    console.log('******** ' + text + ' **************');\r\n    console.log(variable);\r\n  }\r\n};\r\n\r\nfunction* fetchData(action) {\r\n    yield put({type: action.payload.reduxActionType, payload: action.payload.data});\r\n}\r\nexport default fetchData;\r\n","import {store} from \"./Store/configureStore\";\r\nimport { runSaga } from \"redux-saga\";\r\nimport fetchData from \"./Store/Sagas/SagaHelper\";\r\n\r\n\r\nexport const getServerResponse = async (serverCommunication, queryParam = null, qparam = null,setIsLoading=null) => {\r\n  if (!serverCommunication?.apiUrl) {\r\n    console.error('Error',\"No API URL provided\");\r\n    return;\r\n  }\r\n  try {\r\n    \r\n    const response = await runSaga(\r\n      {\r\n        dispatch: () => { }, // We don't need to dispatch\r\n        getState: () => store.getState(), // Provide access to Redux state\r\n      },\r\n      fetchData,\r\n      serverCommunication,\r\n      queryParam,\r\n      qparam\r\n    ).toPromise();\r\n\r\n    return response;\r\n  } catch (error) {\r\n    console.error(\"Error in Server Response:\", error);\r\n  } finally {\r\n    setIsLoading && setIsLoading(false);\r\n  }\r\n};\r\n","export default function serverCommunicationHelper({\r\n  apiActionType = \"\",\r\n  permission = false,\r\n  requestType = \"GET\",\r\n  apiUrl,\r\n  isEncrypted = true,\r\n  metaData = true,\r\n  useBaseURL = true,\r\n  formData = false,\r\n  body = {},\r\n  reduxActionType = \"\",\r\n  isFile = false,\r\n  onSuccess = (res) => console.log(\"Success:\", res),\r\n  onFailure = (err) => console.log(\"Error:\", err.message),\r\n}) {\r\n  return {\r\n    apiActionType,\r\n    permission,\r\n    requestType,\r\n    apiUrl,\r\n    metaData,\r\n    body,\r\n    formData,\r\n    useBaseURL,\r\n    isEncrypted,\r\n    reduxActionType,\r\n    isFile,\r\n    onSuccess,\r\n    onFailure,\r\n  };\r\n}","import { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n// Default toast configuration\r\nconst toastConfig = {\r\n  position: \"top-right\",\r\n  autoClose: 3000,\r\n  hideProgressBar: false,\r\n  closeOnClick: true,\r\n  pauseOnHover: true,\r\n  draggable: true,\r\n};\r\n\r\n// Success toast notification\r\nexport const showSuccessToast = (message) => {\r\n  toast.success(message, toastConfig);\r\n};\r\n\r\n// Error toast notification\r\nexport const showErrorToast = (message) => {\r\n  toast.error(message, toastConfig);\r\n};\r\n\r\n// Info toast notification\r\nexport const showInfoToast = (message) => {\r\n  toast.info(message, toastConfig);\r\n};\r\n\r\n// Warning toast notification\r\nexport const showWarningToast = (message) => {\r\n  toast.warning(message, toastConfig);\r\n};\r\n\r\n// General purpose toast utility\r\nexport const showToast = (message, type = \"default\") => {\r\n  switch (type?.toLowerCase()) {\r\n    case 'success':\r\n      showSuccessToast(message);\r\n      break;\r\n    case 'error':\r\n      showErrorToast(message);\r\n      break;\r\n    case 'info':\r\n      showInfoToast(message);\r\n      break;\r\n    case 'warning':\r\n      showWarningToast(message);\r\n      break;\r\n    default:\r\n      toast(message, toastConfig);\r\n  }\r\n}; "],"mappings":"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","names":["require_encryption","__commonJSMin","exports","module","CryptoJS","adjustKeyLength","key","targetLength","encryptObject","object","adjustedKey","encryptionKey","stringifiedObject","decryptObject","encryptedObject","decryptedString","applyMiddleware","createStore","compose","persistStore","persistReducer","storage","createSagaMiddleware","combineReducers","REDUX_UPDATE_CURRENT_USER_ROLE","REDUX_LOGOUT_CURRENT_USER","REDUX_UPDATE_CURRENT_USER","REDUX_UPDATE_LOADING_STATE","REDUX_UPDATE_USER_DATA","REDUX_API_DOCUMENTATION","initialState","mainReducer","state","action","_a","_b","_c","_d","REDUX_UPDATE_CURRENT_USER","__spreadProps","__spreadValues","REDUX_UPDATE_USER_DATA","updatedUser","REDUX_LOGOUT_CURRENT_USER","REDUX_UPDATE_CURRENT_USER_ROLE","REDUX_UPDATE_LOADING_STATE","REDUX_API_DOCUMENTATION","mainReducer_default","rootReducer","combineReducers","mainReducer_default","Reducers_default","all","GET_OTP","VERIFY_OTP","UPDATE_CURRENT_USER_ROLE","UPDATE_LOADING_STATE","LOGOUT_CURRENT_USER","GET_ALL_USERS","GET_ALL_ROLES","DELETE_USER","ADD_USER","DELETE_ROLE","ADD_ROLE","GET_GROUPS","GET_ALL_PERMISSIONS","GET_ALL_PERMISSIONS_GROUPS","UPDATE_USER_DATA","GET_ALL_USER_ROLE_PERMISSIONS_GROUPS","GET_ADMIN_DASHBOARD_DATA","GET_USER_DEVICES","ADD_PERMISSION","PERMISSION_UPDATE","GET_PERMISSION_BY_ID","ADMIN_USER_VIEW","ADMIN_DESIGNATION_VIEW","ADMIN_DEPARTMENTS_VIEW","UPDATE_PERMISSION_BY_ID","ADMIN_ROLES_DESIGNATION_DEPARTMENT_VIEW","ADMIN_USER_ROLE_DESIGNATION_DEPARTMENT_VIEW","ADMIN_PERMISSION_GROUPS_VIEW","ADMIN_PERMISSION_GROUPS_PERMISSIONS_VIEW","ADMIN_USER_ROLE_DESIGNATION_PERMISSIONS_VIEW","GET_INDIVIDUAL_LEADERBOARD_DATA","GET_GROUP_LEADERBOARD_DATA","GET_USER_DEVICES_OTP","ADD_DEVICE","ADD_DEVICE_OTP","FETCH_CLASS_ACTIVITIES","API_DOCUMENTATION","takeEvery","import_encryption","select","put","constants","Constants_default","fetchData","action","queryParameter","queryParameterId","_a","_b","_c","_d","_e","_f","_g","_h","_i","_j","_k","_l","_m","_n","_o","_p","_q","_r","updated_action","all_state","select","state","currentUser","userSelectedRole","nextPart","useBaseURL","isFile","isEncrypted","completeUrl","Constants_default","hasMetaData","isFormData","accessToken","request","__spreadProps","__spreadValues","secondEncryption","finalActionBody","response","err","responseData","frameworkErrorMessage","getFrameworkErrorMessage","put","error","statusCode","frameworkStatusCode","SagaHelper_default","put","fetchData","action","put","ReduxOnlySagaHelper_default","dataSaga","takeEvery","GET_OTP","SagaHelper_default","VERIFY_OTP","GET_ALL_USERS","GET_ALL_ROLES","DELETE_USER","ADD_USER","DELETE_ROLE","ADD_ROLE","GET_GROUPS","GET_ALL_PERMISSIONS","GET_ALL_PERMISSIONS_GROUPS","UPDATE_USER_DATA","GET_ALL_USER_ROLE_PERMISSIONS_GROUPS","GET_ADMIN_DASHBOARD_DATA","GET_USER_DEVICES","ADD_PERMISSION","PERMISSION_UPDATE","GET_PERMISSION_BY_ID","UPDATE_PERMISSION_BY_ID","ADMIN_USER_VIEW","ADMIN_DESIGNATION_VIEW","ADMIN_DEPARTMENTS_VIEW","ADMIN_ROLES_DESIGNATION_DEPARTMENT_VIEW","ADMIN_USER_ROLE_DESIGNATION_DEPARTMENT_VIEW","ADMIN_PERMISSION_GROUPS_VIEW","ADMIN_PERMISSION_GROUPS_PERMISSIONS_VIEW","ADMIN_USER_ROLE_DESIGNATION_PERMISSIONS_VIEW","UPDATE_CURRENT_USER_ROLE","ReduxOnlySagaHelper_default","UPDATE_LOADING_STATE","LOGOUT_CURRENT_USER","API_DOCUMENTATION","GET_INDIVIDUAL_LEADERBOARD_DATA","GET_GROUP_LEADERBOARD_DATA","GET_USER_DEVICES_OTP","ADD_DEVICE","ADD_DEVICE_OTP","FETCH_CLASS_ACTIVITIES","generalSagas_default","rootSaga","all","generalSagas_default","rootSaga_default","persistConfig","storage","persistedReducer","persistReducer","Reducers_default","sagaMiddleware","createSagaMiddleware","composeEnhancers","compose","store","createStore","applyMiddleware","rootSaga_default","persistor","persistStore","runSaga","getServerResponse","serverCommunication","queryParam","qparam","setIsLoading","runSaga","store","SagaHelper_default","error","serverCommunicationHelper","apiActionType","permission","requestType","apiUrl","isEncrypted","metaData","useBaseURL","formData","body","reduxActionType","isFile","onSuccess","res","onFailure","err","toast","toastConfig","showSuccessToast","message","showErrorToast","showInfoToast"]}